{"version":3,"file":"ngx-indexed-db.umd.js","sources":["ng://ngx-indexed-db/lib/ngx-indexed-db.ts"],"sourcesContent":["export class NgxIndexedDB {\n\tutils: Utils;\n\tdbWrapper: DbWrapper;\n\n\tconstructor(dbName: string, version: number) {\n\t\tthis.utils = new Utils();\n\t\tthis.dbWrapper = new DbWrapper(dbName, version);\n\t}\n\n\topenDatabase(version: number, upgradeCallback?: Function) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis.dbWrapper.dbVersion = version;\n\t\t\tlet request = this.utils.indexedDB.open(this.dbWrapper.dbName, version);\n\t\t\trequest.onsuccess = e => {\n\t\t\t\tthis.dbWrapper.db = request.result;\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\trequest.onerror = e => {\n\t\t\t\treject(\n\t\t\t\t\t'IndexedDB error: ' + (<any>e.target).errorCode\n\t\t\t\t\t\t? (<any>e.target).errorCode + ' (' + (<any>e.target).error + ')'\n\t\t\t\t\t\t: (<any>e.target).errorCode\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tif (typeof upgradeCallback === 'function') {\n\t\t\t\trequest.onupgradeneeded = e => {\n\t\t\t\t\tupgradeCallback(e, this.dbWrapper.db);\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t}\n\n\tgetByKey(storeName: string, key: any) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\n\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\n\t\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readonly, storeName, reject, resolve)\n\t\t\t\t),\n\t\t\t\tobjectStore = transaction.objectStore(storeName),\n\t\t\t\trequest: IDBRequest;\n\n\t\t\trequest = objectStore.get(key);\n\t\t\trequest.onsuccess = function(event: Event) {\n\t\t\t\tresolve((<any>event.target).result);\n\t\t\t};\n\t\t});\n\t}\n\n\tgetAll(storeName: string, keyRange?: IDBKeyRange, indexDetails?: IndexDetails) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\n\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\n\t\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readonly, storeName, reject, resolve)\n\t\t\t\t),\n\t\t\t\tobjectStore = transaction.objectStore(storeName),\n\t\t\t\tresult: Array<any> = [],\n\t\t\t\trequest: IDBRequest;\n\t\t\tif (indexDetails) {\n\t\t\t\tlet index = objectStore.index(indexDetails.indexName),\n\t\t\t\t\torder = indexDetails.order === 'desc' ? 'prev' : 'next';\n\t\t\t\trequest = index.openCursor(keyRange, <IDBCursorDirection>order);\n\t\t\t} else {\n\t\t\t\trequest = objectStore.openCursor(keyRange);\n\t\t\t}\n\n\t\t\trequest.onerror = function(e) {\n\t\t\t\treject(e);\n\t\t\t};\n\n\t\t\trequest.onsuccess = function(evt: Event) {\n\t\t\t\tlet cursor = (<IDBOpenDBRequest>evt.target).result;\n\t\t\t\tif (cursor) {\n\t\t\t\t\tresult.push(cursor['value']);\n\t\t\t\t\tcursor['continue']();\n\t\t\t\t} else {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n\n\tadd(storeName: string, value: any, key?: any) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\n\t\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readwrite, storeName, reject, resolve)\n\t\t\t\t),\n\t\t\t\tobjectStore = transaction.objectStore(storeName);\n\n\t\t\tlet request = objectStore.add(value, key);\n\t\t\trequest.onsuccess = (evt: any) => {\n\t\t\t\tkey = evt.target.result;\n\t\t\t\tresolve(evt);\n\t\t\t};\n\t\t});\n\t}\n\n\tcount(storeName: string, keyRange?: IDBValidKey | IDBKeyRange) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\n\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\n\t\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readonly, storeName, reject, resolve)\n\t\t\t\t),\n\t\t\t\tobjectStore = transaction.objectStore(storeName),\n\t\t\t\trequest: IDBRequest;\n\n\t\t\trequest = objectStore.count(keyRange);\n\n\t\t\trequest.onerror = e => reject(e);\n\t\t\trequest.onsuccess = e => resolve((<any>e.target).result);\n\t\t});\n\t}\n\n\tupdate(storeName: string, value: any, key?: any) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\n\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\n\t\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readwrite, storeName, reject, resolve)\n\t\t\t\t),\n\t\t\t\tobjectStore = transaction.objectStore(storeName);\n\n\t\t\tobjectStore.put(value, key);\n\t\t});\n\t}\n\n\tdelete(storeName: string, key: any) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\n\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\n\t\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readwrite, storeName, reject, resolve)\n\t\t\t\t),\n\t\t\t\tobjectStore = transaction.objectStore(storeName);\n\n\t\t\tobjectStore['delete'](key);\n\t\t});\n\t}\n\n\tdeleteDatabase() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.dbWrapper.db.close();\n\t\t\tconst deleteDBRequest = this.utils.indexedDB.deleteDatabase(this.dbWrapper.dbName);\n\t\t\tdeleteDBRequest.onsuccess = resolve;\n\t\t\tdeleteDBRequest.onerror = reject;\n\t\t\tdeleteDBRequest.onblocked = () => {\n\t\t\t\tthrow new Error(\"Unable to delete database because it's blocked\");\n\t\t\t};\n\t\t});\n\t}\n\n\topenCursor(storeName: string, cursorCallback: (evt: Event) => void, keyRange?: IDBKeyRange) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\n\t\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readonly, storeName, reject, resolve)\n\t\t\t\t),\n\t\t\t\tobjectStore = transaction.objectStore(storeName),\n\t\t\t\trequest = objectStore.openCursor(keyRange);\n\n\t\t\trequest.onsuccess = (evt: Event) => {\n\t\t\t\tcursorCallback(evt);\n\t\t\t\tresolve();\n\t\t\t};\n\t\t});\n\t}\n\n\tclear(storeName: string) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\n\t\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readwrite, storeName, reject, resolve)\n\t\t\t\t),\n\t\t\t\tobjectStore = transaction.objectStore(storeName);\n\t\t\tobjectStore.clear();\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tgetByIndex(storeName: string, indexName: string, key: any) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\n\t\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readonly, storeName, reject, resolve)\n\t\t\t\t),\n\t\t\t\tobjectStore = transaction.objectStore(storeName),\n\t\t\t\tindex = objectStore.index(indexName),\n\t\t\t\trequest = index.get(key);\n\t\t\trequest.onsuccess = event => {\n\t\t\t\tresolve((<IDBOpenDBRequest>event.target).result);\n\t\t\t};\n\t\t});\n\t}\n}\n\nexport class Utils {\n\tindexedDB: IDBFactory;\n\n\tconstructor() {\n\t\tthis.indexedDB =\n\t\t\twindow.indexedDB ||\n\t\t\t(<any>window).mozIndexedDB ||\n\t\t\t(<any>window).webkitIndexedDB ||\n\t\t\t(<any>window).msIndexedDB;\n\t}\n}\n\nexport interface IndexDetails {\n\tindexName: string;\n\torder: string;\n}\n\nexport class DbWrapper {\n\tdbName: string;\n\tdbVersion: number;\n\tdb: IDBDatabase;\n\n\tconstructor(dbName: string, version: number) {\n\t\tthis.dbName = dbName;\n\t\tthis.dbVersion = version || 1;\n\t}\n\n\tvalidateStoreName(storeName: string) {\n\t\treturn this.db.objectStoreNames.contains(storeName);\n\t}\n\n\tvalidateBeforeTransaction(storeName: string, reject: Function) {\n\t\tif (!this.db) {\n\t\t\treject('You need to use the openDatabase function to create a database before you query it!');\n\t\t}\n\t\tif (!this.validateStoreName(storeName)) {\n\t\t\treject('objectStore does not exists: ' + storeName);\n\t\t}\n\t}\n\n\tcreateTransaction(options: Options): IDBTransaction {\n\t\tlet trans: IDBTransaction = this.db.transaction(options.storeName, options.dbMode);\n\t\ttrans.onerror = options.error;\n\t\ttrans.oncomplete = options.complete;\n\t\ttrans.onabort = options.abort;\n\t\treturn trans;\n\t}\n\n\toptionsGenerator(type: any, storeName: any, reject: Function, resolve: Function): Options {\n\t\treturn {\n\t\t\tstoreName: storeName,\n\t\t\tdbMode: type,\n\t\t\terror: (e: Event) => {\n\t\t\t\treject(e);\n\t\t\t},\n\t\t\tcomplete: (e: Event) => {\n\t\t\t\tresolve();\n\t\t\t},\n\t\t\tabort: (e: Event) => {\n\t\t\t\treject(e);\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport interface Options {\n\tstoreName: string;\n\tdbMode: IDBTransactionMode;\n\terror: (e: Event) => any;\n\tcomplete: (e: Event) => any;\n\tabort?: any;\n}\n\nexport enum DBMode {\n\treadonly = 'readonly',\n\treadwrite = 'readwrite'\n}\n"],"names":[],"mappings":"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"}