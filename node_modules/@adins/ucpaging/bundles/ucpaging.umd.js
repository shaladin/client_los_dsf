(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('ngx-toastr'), require('@angular/core'), require('@angular/common'), require('@adins/ucsearch'), require('@adins/ucgridview'), require('@adins/ucgridfooter')) :
    typeof define === 'function' && define.amd ? define('ucpaging', ['exports', 'ngx-toastr', '@angular/core', '@angular/common', '@adins/ucsearch', '@adins/ucgridview', '@adins/ucgridfooter'], factory) :
    (factory((global.ucpaging = {}),global.ngxToastr,global.ng.core,global.ng.common,global.ucsearch,global.ucgridview,global.ucgridfooter));
}(this, (function (exports,ngxToastr,i0,common,ucsearch,ucgridview,ucgridfooter) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var UcpagingService = /** @class */ (function () {
        function UcpagingService() {
        }
        UcpagingService.decorators = [
            { type: i0.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        UcpagingService.ctorParameters = function () { return []; };
        /** @nocollapse */ UcpagingService.ngInjectableDef = i0.defineInjectable({ factory: function UcpagingService_Factory() { return new UcpagingService(); }, token: UcpagingService, providedIn: "root" });
        return UcpagingService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var InputSearchObj = /** @class */ (function () {
        function InputSearchObj() {
            this.arrCritObj = null;
            this.addCritInput = null;
        }
        return InputSearchObj;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var InputGridObj = /** @class */ (function () {
        function InputGridObj() {
        }
        return InputGridObj;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var UcpagingComponent = /** @class */ (function () {
        function UcpagingComponent(toastr) {
            this.toastr = toastr;
            this.select = new i0.EventEmitter();
            this.pageNow = 1;
            this.pageSize = 10;
            this.orderByKey = null;
            this.orderByValue = true;
        }
        /**
         * @return {?}
         */
        UcpagingComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                console.log("ucpaging");
                this.apiUrl = this.searchObj.enviromentUrl + this.searchObj.apiQryPaging;
                this.gridObj = new InputGridObj();
                this.gridObj.apiUrl = this.apiUrl;
                this.gridObj.deleteUrl = this.searchObj.enviromentUrl + this.searchObj.deleteUrl;
                this.gridObj.pageNow = this.pageNow;
                this.gridObj.pageSize = this.pageSize;
                this.gridObj.pagingJson = this.searchObj.pagingJson;
                this.gridObj.searchComp = this.searchComponent;
                this.inputObj = new InputSearchObj();
                this.inputObj._url = this.searchObj._url;
                this.inputObj.enviromentUrl = this.searchObj.enviromentUrl;
                this.inputObj.apiQryPaging = this.searchObj.apiQryPaging;
                this.inputObj.addCritInput = this.searchObj.addCritInput;
            };
        //** Start UC Search **/
        //** Start UC Search **/
        /**
         * @param {?} event
         * @return {?}
         */
        UcpagingComponent.prototype.getResult =
            //** Start UC Search **/
            /**
             * @param {?} event
             * @return {?}
             */
            function (event) {
                if (event.response.Count == 0) {
                    this.toastr.error("No Data Found");
                }
                this.gridObj.resultData = event.response;
                this.totalData = event.response.Count;
                this.ucgridFooter.pageNow = event.pageNow;
                this.ucgridFooter.totalData = this.totalData;
                this.ucgridFooter.resultData = this.gridObj.resultData;
            };
        /**
         * @param {?} event
         * @return {?}
         */
        UcpagingComponent.prototype.getOutput = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                this.orderByKey = event.orderByKey;
                this.orderByValue = event.orderByValue;
            };
        /**
         * @param {?} event
         * @return {?}
         */
        UcpagingComponent.prototype.getSelect = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                this.select.emit(event);
            };
        /**
         * @param {?} event
         * @return {?}
         */
        UcpagingComponent.prototype.onSelect = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                this.pageNow = event.pageNow;
                this.pageSize = event.pageSize;
                this.gridObj.pageNow = event.pageNow;
                this.gridObj.pageSize = event.pageSize;
                this.searchPagination(this.pageNow);
            };
        /**
         * @param {?} event
         * @return {?}
         */
        UcpagingComponent.prototype.searchPagination = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                this.pageNow = event;
                this.gridObj.pageNow = event;
                /** @type {?} */
                var order = null;
                if (this.orderByKey != null) {
                    order = {
                        key: this.orderByKey,
                        value: this.orderByValue
                    };
                }
                this.searchComponent.search(this.apiUrl, this.pageNow, this.pageSize, order);
            };
        UcpagingComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'lib-ucpaging',
                        template: "<lib-UCSearch id=\"ucSearch\" style=\"width:100%;\" [searchInput]='inputObj' (result)=\"getResult($event)\"></lib-UCSearch>\r\n\r\n<lib-ucgridview [gridInput]=\"gridObj\" (output)=\"getOutput($event)\" (select)=\"getSelect($event)\"></lib-ucgridview>\r\n\r\n<div [hidden]=\"gridObj?.resultData?.Data == null\">\r\n    <lib-ucgridfooter (select)=\"onSelect($event)\"></lib-ucgridfooter>\r\n</div>"
                    }] }
        ];
        /** @nocollapse */
        UcpagingComponent.ctorParameters = function () {
            return [
                { type: ngxToastr.ToastrService }
            ];
        };
        UcpagingComponent.propDecorators = {
            searchObj: [{ type: i0.Input }],
            select: [{ type: i0.Output }],
            searchComponent: [{ type: i0.ViewChild, args: [ucsearch.UCSearchComponent,] }],
            ucgridFooter: [{ type: i0.ViewChild, args: [ucgridfooter.UcgridfooterComponent,] }]
        };
        return UcpagingComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var UcpagingModule = /** @class */ (function () {
        function UcpagingModule() {
        }
        UcpagingModule.decorators = [
            { type: i0.NgModule, args: [{
                        declarations: [UcpagingComponent],
                        imports: [
                            common.CommonModule,
                            ucsearch.UCSearchModule,
                            ucgridview.UcgridviewModule,
                            ucgridfooter.UcgridfooterModule
                        ],
                        exports: [UcpagingComponent]
                    },] }
        ];
        return UcpagingModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.UcpagingService = UcpagingService;
    exports.UcpagingComponent = UcpagingComponent;
    exports.UcpagingModule = UcpagingModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ucpaging.umd.js.map