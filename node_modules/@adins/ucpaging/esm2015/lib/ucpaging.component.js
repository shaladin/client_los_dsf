/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewChild, Output, EventEmitter } from '@angular/core';
import { UCSearchComponent } from '@adins/ucsearch';
import { UcgridfooterComponent } from '@adins/ucgridfooter';
import { InputSearchObj } from './model/InputSearchObj.Model';
import { InputGridObj } from './model/InputGridObj.Model';
import { ToastrService } from 'ngx-toastr';
export class UcpagingComponent {
    /**
     * @param {?} toastr
     */
    constructor(toastr) {
        this.toastr = toastr;
        this.select = new EventEmitter();
        this.pageNow = 1;
        this.pageSize = 10;
        this.orderByKey = null;
        this.orderByValue = true;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        console.log("ucpaging");
        this.apiUrl = this.searchObj.enviromentUrl + this.searchObj.apiQryPaging;
        this.gridObj = new InputGridObj();
        this.gridObj.apiUrl = this.apiUrl;
        this.gridObj.deleteUrl = this.searchObj.enviromentUrl + this.searchObj.deleteUrl;
        this.gridObj.pageNow = this.pageNow;
        this.gridObj.pageSize = this.pageSize;
        this.gridObj.pagingJson = this.searchObj.pagingJson;
        this.gridObj.searchComp = this.searchComponent;
        this.inputObj = new InputSearchObj();
        this.inputObj._url = this.searchObj._url;
        this.inputObj.enviromentUrl = this.searchObj.enviromentUrl;
        this.inputObj.apiQryPaging = this.searchObj.apiQryPaging;
        this.inputObj.addCritInput = this.searchObj.addCritInput;
    }
    //** Start UC Search **/
    /**
     * @param {?} event
     * @return {?}
     */
    getResult(event) {
        if (event.response.Count == 0) {
            this.toastr.error("No Data Found");
        }
        this.gridObj.resultData = event.response;
        this.totalData = event.response.Count;
        this.ucgridFooter.pageNow = event.pageNow;
        this.ucgridFooter.totalData = this.totalData;
        this.ucgridFooter.resultData = this.gridObj.resultData;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    getOutput(event) {
        this.orderByKey = event.orderByKey;
        this.orderByValue = event.orderByValue;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    getSelect(event) {
        this.select.emit(event);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onSelect(event) {
        this.pageNow = event.pageNow;
        this.pageSize = event.pageSize;
        this.gridObj.pageNow = event.pageNow;
        this.gridObj.pageSize = event.pageSize;
        this.searchPagination(this.pageNow);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    searchPagination(event) {
        this.pageNow = event;
        this.gridObj.pageNow = event;
        /** @type {?} */
        var order = null;
        if (this.orderByKey != null) {
            order = {
                key: this.orderByKey,
                value: this.orderByValue
            };
        }
        this.searchComponent.search(this.apiUrl, this.pageNow, this.pageSize, order);
    }
}
UcpagingComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-ucpaging',
                template: "<lib-UCSearch id=\"ucSearch\" style=\"width:100%;\" [searchInput]='inputObj' (result)=\"getResult($event)\"></lib-UCSearch>\r\n\r\n<lib-ucgridview [gridInput]=\"gridObj\" (output)=\"getOutput($event)\" (select)=\"getSelect($event)\"></lib-ucgridview>\r\n\r\n<div [hidden]=\"gridObj?.resultData?.Data == null\">\r\n    <lib-ucgridfooter (select)=\"onSelect($event)\"></lib-ucgridfooter>\r\n</div>"
            }] }
];
/** @nocollapse */
UcpagingComponent.ctorParameters = () => [
    { type: ToastrService }
];
UcpagingComponent.propDecorators = {
    searchObj: [{ type: Input }],
    select: [{ type: Output }],
    searchComponent: [{ type: ViewChild, args: [UCSearchComponent,] }],
    ucgridFooter: [{ type: ViewChild, args: [UcgridfooterComponent,] }]
};
if (false) {
    /** @type {?} */
    UcpagingComponent.prototype.searchObj;
    /** @type {?} */
    UcpagingComponent.prototype.select;
    /** @type {?} */
    UcpagingComponent.prototype.searchComponent;
    /** @type {?} */
    UcpagingComponent.prototype.ucgridFooter;
    /** @type {?} */
    UcpagingComponent.prototype.inputObj;
    /** @type {?} */
    UcpagingComponent.prototype.gridObj;
    /** @type {?} */
    UcpagingComponent.prototype.apiUrl;
    /** @type {?} */
    UcpagingComponent.prototype.pageNow;
    /** @type {?} */
    UcpagingComponent.prototype.pageSize;
    /** @type {?} */
    UcpagingComponent.prototype.totalData;
    /** @type {?} */
    UcpagingComponent.prototype.orderByKey;
    /** @type {?} */
    UcpagingComponent.prototype.orderByValue;
    /** @type {?} */
    UcpagingComponent.prototype.toastr;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWNwYWdpbmcuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vdWNwYWdpbmcvIiwic291cmNlcyI6WyJsaWIvdWNwYWdpbmcuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDOUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzFELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFPM0MsTUFBTSxPQUFPLGlCQUFpQjs7OztJQW1CNUIsWUFBbUIsTUFBcUI7UUFBckIsV0FBTSxHQUFOLE1BQU0sQ0FBZTtRQWhCOUIsV0FBTSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBVXpELFlBQU8sR0FBUSxDQUFDLENBQUM7UUFDakIsYUFBUSxHQUFRLEVBQUUsQ0FBQztRQUVuQixlQUFVLEdBQVEsSUFBSSxDQUFDO1FBQ3ZCLGlCQUFZLEdBQVksSUFBSSxDQUFDO0lBRWUsQ0FBQzs7OztJQUU3QyxRQUFRO1FBQ04sT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN4QixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDO1FBQ3pFLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUNsQyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxD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QyxVQUFVO2dCQUNwQixLQUFLLEVBQUUsSUFBSSxDQUFDLFlBQVk7YUFDekIsQ0FBQTtTQUNGO1FBQ0QsSUFBSSxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDL0UsQ0FBQzs7O1lBcEZGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsY0FBYztnQkFDeEIsdVpBQXdDO2FBRXpDOzs7O1lBTlEsYUFBYTs7O3dCQVNuQixLQUFLO3FCQUNMLE1BQU07OEJBR04sU0FBUyxTQUFDLGlCQUFpQjsyQkFDM0IsU0FBUyxTQUFDLHFCQUFxQjs7OztJQUxoQyxzQ0FBd0I7O0lBQ3hCLG1DQUF5RDs7SUFHekQsNENBQThDOztJQUM5Qyx5Q0FBK0M7O0lBQy9DLHFDQUFjOztJQUNkLG9DQUFhOztJQUdiLG1DQUFZOztJQUNaLG9DQUFpQjs7SUFDakIscUNBQW1COztJQUNuQixzQ0FBZTs7SUFDZix1Q0FBdUI7O0lBQ3ZCLHlDQUE2Qjs7SUFFakIsbUNBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBWaWV3Q2hpbGQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFVDU2VhcmNoQ29tcG9uZW50IH0gZnJvbSAnQGFkaW5zL3Vjc2VhcmNoJztcclxuaW1wb3J0IHsgVWNncmlkZm9vdGVyQ29tcG9uZW50IH0gZnJvbSAnQGFkaW5zL3VjZ3JpZGZvb3Rlcic7XHJcbmltcG9ydCB7IElucHV0U2VhcmNoT2JqIH0gZnJvbSAnLi9tb2RlbC9JbnB1dFNlYXJjaE9iai5Nb2RlbCc7XHJcbmltcG9ydCB7IElucHV0R3JpZE9iaiB9IGZyb20gJy4vbW9kZWwvSW5wdXRHcmlkT2JqLk1vZGVsJztcclxuaW1wb3J0IHsgVG9hc3RyU2VydmljZSB9IGZyb20gJ25neC10b2FzdHInO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdsaWItdWNwYWdpbmcnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi91Y3BhZ2luZy5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVzOiBbXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgVWNwYWdpbmdDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICBASW5wdXQoKSBzZWFyY2hPYmo6IGFueTtcclxuICBAT3V0cHV0KCkgc2VsZWN0OiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICBcclxuICAvLyoqIFN0YXJ0IFVDIFNlYXJjaCAqKi8vXHJcbiAgQFZpZXdDaGlsZChVQ1NlYXJjaENvbXBvbmVudCkgc2VhcmNoQ29tcG9uZW50O1xyXG4gIEBWaWV3Q2hpbGQoVWNncmlkZm9vdGVyQ29tcG9uZW50KSB1Y2dyaWRGb290ZXI7XHJcbiAgaW5wdXRPYmo6IGFueTtcclxuICBncmlkT2JqOiBhbnk7XHJcbiAgLy8qKiBFbmQgVUMgU2VhcmNoICoqLy9cclxuXHJcbiAgYXBpVXJsOiBhbnk7XHJcbiAgcGFnZU5vdzogYW55ID0gMTtcclxuICBwYWdlU2l6ZTogYW55ID0gMTA7XHJcbiAgdG90YWxEYXRhOiBhbnk7XHJcbiAgb3JkZXJCeUtleTogYW55ID0gbnVsbDtcclxuICBvcmRlckJ5VmFsdWU6IGJvb2xlYW4gPSB0cnVlO1xyXG5cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgdG9hc3RyOiBUb2FzdHJTZXJ2aWNlKSB7IH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICBjb25zb2xlLmxvZyhcInVjcGFnaW5nXCIpO1xyXG4gICAgdGhpcy5hcGlVcmwgPSB0aGlzLnNlYXJjaE9iai5lbnZpcm9tZW50VXJsICsgdGhpcy5zZWFyY2hPYmouYXBpUXJ5UGFnaW5nO1xyXG4gICAgdGhpcy5ncmlkT2JqID0gbmV3IElucHV0R3JpZE9iaigpO1xyXG4gICAgdGhpcy5ncmlkT2JqLmFwaVVybCA9IHRoaXMuYXBpVXJsO1xyXG4gICAgdGhpcy5ncmlkT2JqLmRlbGV0ZVVybCA9IHRoaXMuc2VhcmNoT2JqLmVudmlyb21lbnRVcmwgKyB0aGlzLnNlYXJjaE9iai5kZWxldGVVcmw7XHJcbiAgICB0aGlzLmdyaWRPYmoucGFnZU5vdyA9IHRoaXMucGFnZU5vdztcclxuICAgIHRoaXMuZ3JpZE9iai5wYWdlU2l6ZSA9IHRoaXMucGFnZVNpemU7XHJcbiAgICB0aGlzLmdyaWRPYmoucGFnaW5nSnNvbiA9IHRoaXMuc2VhcmNoT2JqLnBhZ2luZ0pzb247XHJcbiAgICB0aGlzLmdyaWRPYmouc2VhcmNoQ29tcCA9IHRoaXMuc2VhcmNoQ29tcG9uZW50O1xyXG4gICAgXHJcbiAgICB0aGlzLmlucHV0T2JqID0gbmV3IElucHV0U2VhcmNoT2JqKCk7XHJcbiAgICB0aGlzLmlucHV0T2JqLl91cmwgPSB0aGlzLnNlYXJjaE9iai5fdXJsO1xyXG4gICAgdGhpcy5pbnB1dE9iai5lbnZpcm9tZW50VXJsID0gdGhpcy5zZWFyY2hPYmouZW52aXJvbWVudFVybDtcclxuICAgIHRoaXMuaW5wdXRPYmouYXBpUXJ5UGFnaW5nID0gdGhpcy5zZWFyY2hPYmouYXBpUXJ5UGFnaW5nO1xyXG4gICAgdGhpcy5pbnB1dE9iai5hZGRDcml0SW5wdXQgPSB0aGlzLnNlYXJjaE9iai5hZGRDcml0SW5wdXQ7XHJcbiAgfVxyXG5cclxuICAvLyoqIFN0YXJ0IFVDIFNlYXJjaCAqKi9cclxuICBnZXRSZXN1bHQoZXZlbnQpIHtcclxuICAgIGlmIChldmVudC5yZXNwb25zZS5Db3VudCA9PSAwKSB7XHJcbiAgICAgIHRoaXMudG9hc3RyLmVycm9yKFwiTm8gRGF0YSBGb3VuZFwiKTtcclxuICAgIH1cclxuICAgIHRoaXMuZ3JpZE9iai5yZXN1bHREYXRhID0gZXZlbnQucmVzcG9uc2U7XHJcbiAgICB0aGlzLnRvdGFsRGF0YSA9IGV2ZW50LnJlc3BvbnNlLkNvdW50O1xyXG4gICAgdGhpcy51Y2dyaWRGb290ZXIucGFnZU5vdyA9IGV2ZW50LnBhZ2VOb3c7XHJcbiAgICB0aGlzLnVjZ3JpZEZvb3Rlci50b3RhbERhdGEgPSB0aGlzLnRvdGFsRGF0YTtcclxuICAgIHRoaXMudWNncmlkRm9vdGVyLnJlc3VsdERhdGEgPSB0aGlzLmdyaWRPYmoucmVzdWx0RGF0YTtcclxuICB9XHJcblxyXG4gIGdldE91dHB1dChldmVudCkge1xyXG4gICAgdGhpcy5vcmRlckJ5S2V5ID0gZXZlbnQub3JkZXJCeUtleTtcclxuICAgIHRoaXMub3JkZXJCeVZhbHVlID0gZXZlbnQub3JkZXJCeVZhbHVlO1xyXG4gIH1cclxuXHJcbiAgZ2V0U2VsZWN0KGV2ZW50KSB7XHJcbiAgICB0aGlzLnNlbGVjdC5lbWl0KGV2ZW50KTtcclxuICB9XHJcblxyXG4gIG9uU2VsZWN0KGV2ZW50KSB7XHJcbiAgICB0aGlzLnBhZ2VOb3cgPSBldmVudC5wYWdlTm93O1xyXG4gICAgdGhpcy5wYWdlU2l6ZSA9IGV2ZW50LnBhZ2VTaXplO1xyXG4gICAgdGhpcy5ncmlkT2JqLnBhZ2VOb3cgPSBldmVudC5wYWdlTm93O1xyXG4gICAgdGhpcy5ncmlkT2JqLnBhZ2VTaXplID0gZXZlbnQucGFnZVNpemU7XHJcbiAgICB0aGlzLnNlYXJjaFBhZ2luYXRpb24odGhpcy5wYWdlTm93KTtcclxuICB9XHJcblxyXG4gIHNlYXJjaFBhZ2luYXRpb24oZXZlbnQ6IG51bWJlcikge1xyXG4gICAgdGhpcy5wYWdlTm93ID0gZXZlbnQ7XHJcbiAgICB0aGlzLmdyaWRPYmoucGFnZU5vdyA9IGV2ZW50O1xyXG4gICAgdmFyIG9yZGVyID0gbnVsbDtcclxuICAgIGlmICh0aGlzLm9yZGVyQnlLZXkgIT0gbnVsbCkge1xyXG4gICAgICBvcmRlciA9IHtcclxuICAgICAgICBrZXk6IHRoaXMub3JkZXJCeUtleSxcclxuICAgICAgICB2YWx1ZTogdGhpcy5vcmRlckJ5VmFsdWVcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgdGhpcy5zZWFyY2hDb21wb25lbnQuc2VhcmNoKHRoaXMuYXBpVXJsLCB0aGlzLnBhZ2VOb3csIHRoaXMucGFnZVNpemUsIG9yZGVyKTtcclxuICB9XHJcbiAgLy8qKiBFbmQgVUMgU2VhcmNoICoqL1xyXG59XHJcbiJdfQ==