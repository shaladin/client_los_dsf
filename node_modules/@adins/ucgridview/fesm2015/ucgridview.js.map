{"version":3,"file":"ucgridview.js.map","sources":["ng://ucgridview/lib/ucgridview.service.ts","ng://ucgridview/lib/ucgridview.component.ts","ng://ucgridview/lib/ucgridview.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UcgridviewService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'lib-ucgridview',\r\n  templateUrl: './ucgridview.component.html',\r\n  styles: []\r\n})\r\nexport class UcgridviewComponent implements OnInit {\r\n\r\n  @Input() gridInput: any;\r\n  @Output() output: EventEmitter<any> = new EventEmitter();\r\n  @Output() select: EventEmitter<any> = new EventEmitter();\r\n  \r\n  pagingJson: any;\r\n  headerList: any;\r\n  bodyList: any;\r\n  isSeq: any = false;\r\n\r\n  pageNow: any = 1;\r\n  pageSize: any = 10;\r\n  orderByKey: any = null;\r\n  orderByValue: boolean = true;\r\n\r\n  constructor(private http: HttpClient, public toastr: ToastrService, private modalService: NgbModal) { }\r\n\r\n  ngOnInit() {\r\n    this.initiateForm();\r\n  }\r\n\r\n  initiateForm() {\r\n    this.getJSON(this.gridInput.pagingJson).subscribe(data => {\r\n      console.log(data);\r\n      this.isSeq = data.isSeq;\r\n      this.headerList = data.headerList;\r\n      this.bodyList = data.bodyList;\r\n\r\n    })\r\n  }\r\n\r\n  public getJSON(url: string): Observable<any> {\r\n    return this.http.get(url);\r\n  }\r\n\r\n  genAction(item, param) {\r\n    var arrList = {};\r\n\r\n    for (var i = 0; i < param.length; i++) {\r\n      if (item[param[i].type] != undefined || item[param[i].param] != undefined) {\r\n        arrList[param[i].type] = item[param[i].property];\r\n      } else {\r\n        arrList[param[i].type] = param[i].property;\r\n      }\r\n    }\r\n    return arrList;\r\n  }\r\n  \r\n  switchCase(item, condList) {\r\n    var condition = false;\r\n\r\n    for (var i = 0; i < condList.conditions.length; i++) {\r\n      if (item[condList.conditions[i].property] == condList.conditions[i].value) {\r\n        condition = true;\r\n      } else {\r\n        condition = false;\r\n        break;\r\n      }\r\n    }\r\n    return condition;\r\n  }\r\n\r\n  searchSort(event: any) {\r\n    if (this.orderByKey == event.target.attributes.name.nodeValue) {\r\n      this.orderByValue = !this.orderByValue;\r\n    } else {\r\n      this.orderByValue = true;\r\n    }\r\n    this.orderByKey = event.target.attributes.name.nodeValue;\r\n    var gridOutput = {\r\n      orderByKey: this.orderByKey,\r\n      orderByValue: this.orderByValue\r\n    }\r\n    this.output.emit(gridOutput);\r\n    var order = {\r\n      key: this.orderByKey,\r\n      value: this.orderByValue\r\n    }\r\n    this.gridInput.searchComp.search(this.gridInput.apiUrl, this.gridInput.pageNow, this.gridInput.pageSize, order);\r\n  }\r\n\r\n  searchPagination(event: number) {\r\n    this.pageNow = event;\r\n    var order = null;\r\n    if (this.orderByKey != null) {\r\n      order = {\r\n        key: this.orderByKey,\r\n        value: this.orderByValue\r\n      }\r\n    }\r\n    this.gridInput.searchComp.search(this.gridInput.apiUrl, this.pageNow, this.pageSize, order);\r\n  }\r\n\r\n  delete(key: any, value: any) {\r\n    if (confirm(\"Are you sure to delete this record?\")) {\r\n      var delId = {};\r\n      delId[key] = value;\r\n      this.http.post(this.gridInput.deleteUrl, delId).subscribe(\r\n        (response) => {\r\n          this.toastr.success(response['message'], 'Success!');\r\n          this.searchPagination(this.pageNow);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  choose(item) {\r\n    this.select.emit(item);\r\n    this.modalService.dismissAll();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { UcgridviewComponent } from './ucgridview.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [UcgridviewComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  exports: [UcgridviewComponent]\r\n})\r\nexport class UcgridviewModule { }\r\n"],"names":[],"mappings":"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"}
