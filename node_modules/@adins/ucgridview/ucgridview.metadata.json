{"__symbolic":"module","version":4,"metadata":{"UcgridviewService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":2,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]},"statics":{"ngInjectableDef":{}}},"UcgridviewComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"lib-ucgridview","styles":[],"template":"<div [hidden]=\"gridInput?.resultData?.Data == null\">\r\n  <table class=\"table table-responsive-md text-center table-hover\">\r\n    <thead>\r\n      <tr class=\"table-header\">\r\n        <th *ngIf=\"isSeq == true\">No</th>\r\n        <th *ngFor=\"let head of headerList\"\r\n          [ngClass]=\"[head.position == 'left' ? 'text-left' : '', head.position == 'right' ? 'text-right' : '' , head.width == undefined || head.width == '' ? '' : head.width]\">\r\n          <span *ngIf=\"head.type == 'sort'\" translate class=\"thead-header\" (click)=\"searchSort($event)\"\r\n            attr.name=\"{{head.name}}\">{{head.label}}</span>\r\n          <span *ngIf=\"head.type == 'label'\">{{head.label}}</span>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let item of gridInput?.resultData?.Data; let i = index\">\r\n        <td *ngIf=\"isSeq == true\">{{ i+1 }}</td>\r\n        <td *ngFor=\"let body of bodyList\" [ngClass]=\"{ 'text-left': body.position == 'left',\r\n                     'text-right': body.position == 'right' }\">\r\n          <span *ngIf=\"body.type == 'text'\">{{ item[body.property] }}</span>\r\n          <span *ngIf=\"body.type == 'decimal'\">{{ item[body.property] | number }}</span>\r\n          <span *ngIf=\"body.type == 'date'\">{{ item[body.property] | date: 'dd-MMM-yyyy' }}</span>\r\n          <span *ngIf=\"body.type == 'link'\">\r\n            <a [target]=\"body.target\" [routerLink]=\"[body.path]\"\r\n              [queryParams]=\"genAction(item,body.param)\">{{ item[body.property] }}</a>\r\n          </span>\r\n          <span *ngIf=\"body.type == 'boolean'\">\r\n            <span *ngIf=\"item[body.property] == '1'\">Yes</span>\r\n            <span *ngIf=\"item[body.property] == '0'\">No</span>\r\n            <span *ngIf=\"item[body.property] == '' || item[body.property] == null\">-</span>\r\n          </span>\r\n          <span *ngIf=\"body.type == 'action'\">\r\n            <span *ngFor=\"let act of body?.action\">\r\n              <span *ngIf=\"act.type == 'edit'\">\r\n                <a class=\"success p-0\" [routerLink]=\"[act.path]\" [queryParams]=\"genAction(item,act.param)\">\r\n                  <i class=\"font-medium-3 mr-2\"\r\n                    [ngClass]=\" act.icon == undefined || act.icon == '' ? 'ft-edit-2' : act.icon \"></i>\r\n                </a>\r\n              </span>\r\n              <span *ngIf=\"act.type == 'delete'\">\r\n                <a class=\"danger p-0\" (click)=\"delete(act.property,item[act.property])\">\r\n                  <i class=\"font-medium-3 mr-2\"\r\n                    [ngClass]=\" act.icon == undefined || act.icon == '' ? 'ft-trash-2 ' : act.icon \"></i>\r\n                </a>\r\n              </span>\r\n              <span *ngIf=\"act.type == 'select'\">\r\n                <a class=\"primary p-0 bold\" (click)=\"choose(item)\">\r\n                  select\r\n                </a>\r\n              </span>\r\n              <span *ngIf=\"act.type == 'switch'\">\r\n                <span *ngFor=\"let cs of act?.case\">\r\n                  <span *ngIf=\"switchCase(item,cs) && cs.isHide != true\">\r\n                    <a class=\"success p-0\" [routerLink]=\"[cs.result.path]\"\r\n                      [queryParams]=\"genAction(item,cs.result.param)\">\r\n                      <i class=\"font-medium-3 mr-2\"\r\n                        [ngClass]=\" cs.icon == undefined || cs.icon == '' ? 'ft-edit-2' : cs.icon \"></i>\r\n                    </a>\r\n                  </span>\r\n                </span>\r\n              </span>\r\n            </span>\r\n          </span>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>"}]}],"members":{"gridInput":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"output":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":14,"character":3}}]}],"select":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":15,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":27,"character":28},{"__symbolic":"reference","module":"ngx-toastr","name":"ToastrService","line":27,"character":55},{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbModal","line":27,"character":92}]}],"ngOnInit":[{"__symbolic":"method"}],"initiateForm":[{"__symbolic":"method"}],"getJSON":[{"__symbolic":"method"}],"genAction":[{"__symbolic":"method"}],"switchCase":[{"__symbolic":"method"}],"searchSort":[{"__symbolic":"method"}],"searchPagination":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"choose":[{"__symbolic":"method"}]}},"UcgridviewModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":5,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"UcgridviewComponent"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":8,"character":4},{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":9,"character":4}],"exports":[{"__symbolic":"reference","name":"UcgridviewComponent"}]}]}],"members":{}}},"origins":{"UcgridviewService":"./lib/ucgridview.service","UcgridviewComponent":"./lib/ucgridview.component","UcgridviewModule":"./lib/ucgridview.module"},"importAs":"ucgridview"}