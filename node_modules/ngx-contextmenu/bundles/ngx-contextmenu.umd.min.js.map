{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-contextmenu/lib/contextMenu.item.directive.ts","ng://ngx-contextmenu/lib/contextMenu.tokens.ts","ng://ngx-contextmenu/lib/contextMenuContent.component.ts","ng://ngx-contextmenu/lib/contextMenu.service.ts","ng://ngx-contextmenu/lib/contextMenu.component.ts","ng://ngx-contextmenu/lib/contextMenu.attach.directive.ts","ng://ngx-contextmenu/lib/ngx-contextmenu.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","ContextMenuItemDirective","template","elementRef","divider","enabled","passive","visible","execute","EventEmitter","isActive","defineProperty","evaluateIfFunction","currentItem","value","item","Function","setActiveStyles","setInactiveStyles","triggerExecute","$event","emit","event","Directive","args","selector","TemplateRef","ElementRef","Input","Output","CONTEXT_MENU_OPTIONS","InjectionToken","ContextMenuContentComponent","changeDetector","options","menuItems","isLeaf","openSubMenu","closeLeafMenu","closeAllMenus","autoFocus","useBootstrap4","subscription","Subscription","ngOnInit","_this","forEach","menuItem","add","subscribe","queryList","QueryList","reset","_keyManager","ActiveDescendantKeyManager","withWrap","ngAfterViewInit","setTimeout","focus","overlay","updatePosition","ngOnDestroy","unsubscribe","menuElement","nativeElement","stopEvent","stopPropagation","isMenuItemEnabled","isMenuItemVisible","isDisabled","link","onKeyEvent","onKeydown","keyboardOpenSubMenu","cancelEvent","activeItemIndex","onOpenSubMenu","keyboardMenuItemSelect","onMenuItemSelect","onCloseLeafMenu","exceptRootMenu","keyCode","closeMenu","type","button","anchorElementRef","menuItemElements","toArray","anchorElement","contextMenu","subMenu","parentContextMenu","preventDefault","target","indexOf","tagName","isContentEditable","Component","ChangeDetectorRef","Optional","Inject","ViewChild","static","ViewChildren","HostListener","ContextMenuService","scrollStrategy","isDestroyingLeafMenu","show","Subject","triggerClose","close","overlays","fakeElement","getBoundingClientRect","bottom","height","left","right","top","width","openContextMenu","context","positionStrategy","position","connectedTo","originX","originY","overlayX","overlayY","withFallbackPosition","newOverlay","create","panelClass","destroySubMenus","concat","attachContextMenu","mouseEvent_1","clientY","clientX","closeAllContextMenus","eventType","menuClass","contextMenuContent","attach","ComponentPortal","instance","subscriptions","asObservable","executeEvent","closeAllEvent","closeLeafMenuEvent","destroyLeafMenu","subMenuEvent","next","onDestroy","changeDetectorRef","detectChanges","closeEvent","index","detach","dispose","getLastAttachedOverlay","hasAttached","slice","_a","_b","newLeaf","subMenuOverlay","isLeafMenu","Injectable","Overlay","ScrollStrategyOptions","ContextMenuComponent","_contextMenuService","disabled","open","visibleMenuItems","links","menuEvent","onMenuEvent","setVisibleMenuItems","pipe","first","filter","encapsulation","ViewEncapsulation","None","ContentChildren","ContextMenuAttachDirective","contextMenuService","onContextMenu","contextMenuSubject","ContextMenuModule","forRoot","ngModule","providers","provide","useValue","OverlayContainer","useClass","FullscreenOverlayContainer","NgModule","declarations","entryComponents","exports","imports","CommonModule","OverlayModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Highlightable } from '@angular/cdk/a11y';\nimport { Directive, ElementRef, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\n\n@Directive({\n  /* tslint:disable:directive-selector-type */\n  selector: '[contextMenuItem]',\n  /* tslint:enable:directive-selector-type */\n})\nexport class ContextMenuItemDirective implements Highlightable {\n  @Input() public subMenu: any;\n  @Input() public divider = false;\n  @Input() public enabled: boolean | ((item: any) => boolean) = true;\n  @Input() public passive = false;\n  @Input() public visible: boolean | ((item: any) => boolean) = true;\n  @Output() public execute: EventEmitter<{ event: Event, item: any }> = new EventEmitter();\n\n  public currentItem: any;\n  public isActive = false;\n  public get disabled() {\n    return this.passive ||\n      this.divider ||\n      !this.evaluateIfFunction(this.enabled, this.currentItem);\n  }\n\n  constructor(public template: TemplateRef<{ item: any }>, public elementRef: ElementRef) { }\n\n  public evaluateIfFunction(value: any, item: any): any {\n    if (value instanceof Function) {\n      return value(item);\n    }\n    return value;\n  }\n\n  public setActiveStyles(): void {\n    this.isActive = true;\n  }\n  public setInactiveStyles(): void {\n    this.isActive = false;\n  }\n\n  public triggerExecute(item: any, $event?: MouseEvent | KeyboardEvent): void {\n    if (!this.evaluateIfFunction(this.enabled, item)) {\n      return;\n    }\n    this.execute.emit({ event: $event, item });\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const CONTEXT_MENU_OPTIONS = new InjectionToken('CONTEXT_MENU_OPTIONS');\n","import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ContextMenuItemDirective } from './contextMenu.item.directive';\nimport { IContextMenuOptions } from './contextMenu.options';\nimport {\n  CloseLeafMenuEvent,\n  IContextMenuClickEvent\n} from './contextMenu.service';\nimport { CONTEXT_MENU_OPTIONS } from './contextMenu.tokens';\n\nexport interface ILinkConfig {\n  click: (item: any, $event?: MouseEvent) => void;\n  enabled?: (item: any) => boolean;\n  html: (item: any) => string;\n}\n\nconst ARROW_LEFT_KEYCODE = 37;\n\n@Component({\n  selector: 'context-menu-content',\n  styles: [\n    `\n      .passive {\n        display: block;\n        padding: 3px 20px;\n        clear: both;\n        font-weight: normal;\n        line-height: @line-height-base;\n        white-space: nowrap;\n      }\n      .hasSubMenu:before {\n        content: '\\u25B6';\n        float: right;\n      }\n    `\n  ],\n  template: `\n    <div\n      class=\"dropdown open show ngx-contextmenu\"\n      [ngClass]=\"menuClass\"\n      tabindex=\"0\"\n    >\n      <ul\n        #menu\n        class=\"dropdown-menu show\"\n        style=\"position: static; float: none;\"\n        tabindex=\"0\"\n      >\n        <li\n          #li\n          *ngFor=\"let menuItem of menuItems; let i = index\"\n          [class.disabled]=\"!isMenuItemEnabled(menuItem)\"\n          [class.divider]=\"menuItem.divider\"\n          [class.dropdown-divider]=\"useBootstrap4 && menuItem.divider\"\n          [class.active]=\"menuItem.isActive && isMenuItemEnabled(menuItem)\"\n          [attr.role]=\"menuItem.divider ? 'separator' : undefined\"\n        >\n          <a\n            *ngIf=\"!menuItem.divider && !menuItem.passive\"\n            href\n            [class.dropdown-item]=\"useBootstrap4\"\n            [class.active]=\"menuItem.isActive && isMenuItemEnabled(menuItem)\"\n            [class.disabled]=\"useBootstrap4 && !isMenuItemEnabled(menuItem)\"\n            [class.hasSubMenu]=\"!!menuItem.subMenu\"\n            (click)=\"onMenuItemSelect(menuItem, $event)\"\n            (mouseenter)=\"onOpenSubMenu(menuItem, $event)\"\n          >\n            <ng-template\n              [ngTemplateOutlet]=\"menuItem.template\"\n              [ngTemplateOutletContext]=\"{ $implicit: item }\"\n            ></ng-template>\n          </a>\n\n          <span\n            (click)=\"stopEvent($event)\"\n            (contextmenu)=\"stopEvent($event)\"\n            class=\"passive\"\n            *ngIf=\"!menuItem.divider && menuItem.passive\"\n            [class.dropdown-item]=\"useBootstrap4\"\n            [class.disabled]=\"useBootstrap4 && !isMenuItemEnabled(menuItem)\"\n          >\n            <ng-template\n              [ngTemplateOutlet]=\"menuItem.template\"\n              [ngTemplateOutletContext]=\"{ $implicit: item }\"\n            ></ng-template>\n          </span>\n        </li>\n      </ul>\n    </div>\n  `\n})\nexport class ContextMenuContentComponent\n  implements OnInit, OnDestroy, AfterViewInit {\n  @Input() public menuItems: ContextMenuItemDirective[] = [];\n  @Input() public item: any;\n  @Input() public event: MouseEvent | KeyboardEvent;\n  @Input() public parentContextMenu: ContextMenuContentComponent;\n  @Input() public menuClass: string;\n  @Input() public overlay: OverlayRef;\n  @Input() public isLeaf = false;\n  @Output() public execute: EventEmitter<{\n    event: MouseEvent | KeyboardEvent;\n    item: any;\n    menuItem: ContextMenuItemDirective;\n  }> = new EventEmitter();\n  @Output() public openSubMenu: EventEmitter<\n    IContextMenuClickEvent\n  > = new EventEmitter();\n  @Output() public closeLeafMenu: EventEmitter<\n    CloseLeafMenuEvent\n  > = new EventEmitter();\n  @Output() public closeAllMenus: EventEmitter<{\n    event: MouseEvent;\n  }> = new EventEmitter();\n  @ViewChild('menu', { static: true }) public menuElement: ElementRef;\n  @ViewChildren('li') public menuItemElements: QueryList<ElementRef>;\n\n  public autoFocus = false;\n  public useBootstrap4 = false;\n  private _keyManager: ActiveDescendantKeyManager<ContextMenuItemDirective>;\n  private subscription: Subscription = new Subscription();\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    @Optional()\n    @Inject(CONTEXT_MENU_OPTIONS)\n    private options: IContextMenuOptions\n  ) {\n    if (options) {\n      this.autoFocus = options.autoFocus;\n      this.useBootstrap4 = options.useBootstrap4;\n    }\n  }\n\n  ngOnInit(): void {\n    this.menuItems.forEach(menuItem => {\n      menuItem.currentItem = this.item;\n      this.subscription.add(\n        menuItem.execute.subscribe(event =>\n          this.execute.emit({ ...event, menuItem })\n        )\n      );\n    });\n    const queryList = new QueryList<ContextMenuItemDirective>();\n    queryList.reset(this.menuItems);\n    this._keyManager = new ActiveDescendantKeyManager<ContextMenuItemDirective>(\n      queryList\n    ).withWrap();\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      setTimeout(() => this.focus());\n    }\n    this.overlay.updatePosition();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  focus(): void {\n    if (this.autoFocus) {\n      this.menuElement.nativeElement.focus();\n    }\n  }\n\n  stopEvent($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n\n  public isMenuItemEnabled(menuItem: ContextMenuItemDirective): boolean {\n    return this.evaluateIfFunction(menuItem && menuItem.enabled);\n  }\n\n  public isMenuItemVisible(menuItem: ContextMenuItemDirective): boolean {\n    return this.evaluateIfFunction(menuItem && menuItem.visible);\n  }\n\n  public evaluateIfFunction(value: any): any {\n    if (value instanceof Function) {\n      return value(this.item);\n    }\n    return value;\n  }\n\n  public isDisabled(link: ILinkConfig): boolean {\n    return link.enabled && !link.enabled(this.item);\n  }\n\n  @HostListener('window:keydown.ArrowDown', ['$event'])\n  @HostListener('window:keydown.ArrowUp', ['$event'])\n  public onKeyEvent(event: KeyboardEvent): void {\n    if (!this.isLeaf) {\n      return;\n    }\n    this._keyManager.onKeydown(event);\n  }\n\n  @HostListener('window:keydown.ArrowRight', ['$event'])\n  public keyboardOpenSubMenu(event?: KeyboardEvent): void {\n    if (!this.isLeaf) {\n      return;\n    }\n    this.cancelEvent(event);\n    const menuItem = this.menuItems[this._keyManager.activeItemIndex];\n    if (menuItem) {\n      this.onOpenSubMenu(menuItem);\n    }\n  }\n\n  @HostListener('window:keydown.Enter', ['$event'])\n  @HostListener('window:keydown.Space', ['$event'])\n  public keyboardMenuItemSelect(event?: KeyboardEvent): void {\n    if (!this.isLeaf) {\n      return;\n    }\n    this.cancelEvent(event);\n    const menuItem = this.menuItems[this._keyManager.activeItemIndex];\n    if (menuItem) {\n      this.onMenuItemSelect(menuItem, event);\n    }\n  }\n\n  @HostListener('window:keydown.Escape', ['$event'])\n  @HostListener('window:keydown.ArrowLeft', ['$event'])\n  public onCloseLeafMenu(event: KeyboardEvent): void {\n    if (!this.isLeaf) {\n      return;\n    }\n    this.cancelEvent(event);\n    this.closeLeafMenu.emit({\n      exceptRootMenu: event.keyCode === ARROW_LEFT_KEYCODE,\n      event\n    });\n  }\n\n  @HostListener('document:click', ['$event'])\n  @HostListener('document:contextmenu', ['$event'])\n  public closeMenu(event: MouseEvent): void {\n    if (event.type === 'click' && event.button === 2) {\n      return;\n    }\n    this.closeAllMenus.emit({ event });\n  }\n\n  public onOpenSubMenu(\n    menuItem: ContextMenuItemDirective,\n    event?: MouseEvent | KeyboardEvent\n  ): void {\n    const anchorElementRef = this.menuItemElements.toArray()[\n      this._keyManager.activeItemIndex\n    ];\n    const anchorElement = anchorElementRef && anchorElementRef.nativeElement;\n    this.openSubMenu.emit({\n      anchorElement,\n      contextMenu: menuItem.subMenu,\n      event,\n      item: this.item,\n      parentContextMenu: this\n    });\n  }\n\n  public onMenuItemSelect(\n    menuItem: ContextMenuItemDirective,\n    event: MouseEvent | KeyboardEvent\n  ): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.onOpenSubMenu(menuItem, event);\n    if (!menuItem.subMenu) {\n      menuItem.triggerExecute(this.item, event);\n    }\n  }\n\n  private cancelEvent(event): void {\n    if (!event) {\n      return;\n    }\n\n    const target: HTMLElement = event.target;\n    if (\n      ['INPUT', 'TEXTAREA', 'SELECT'].indexOf(target.tagName) > -1 ||\n      target.isContentEditable\n    ) {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import { Overlay, OverlayRef, ScrollStrategyOptions } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ComponentRef, Injectable, ElementRef } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { ContextMenuComponent } from './contextMenu.component';\nimport { ContextMenuItemDirective } from './contextMenu.item.directive';\nimport { ContextMenuContentComponent } from './contextMenuContent.component';\n\nexport interface IContextMenuClickEvent {\n  anchorElement?: Element | EventTarget;\n  contextMenu?: ContextMenuComponent;\n  event?: MouseEvent | KeyboardEvent;\n  parentContextMenu?: ContextMenuContentComponent;\n  item: any;\n  activeMenuItemIndex?: number;\n}\nexport interface IContextMenuContext extends IContextMenuClickEvent {\n  menuItems: ContextMenuItemDirective[];\n  menuClass: string;\n}\nexport interface CloseLeafMenuEvent {\n  exceptRootMenu?: boolean;\n  event?: MouseEvent | KeyboardEvent;\n}\nexport interface OverlayRefWithContextMenu extends OverlayRef {\n  contextMenu?: ContextMenuContentComponent;\n}\n\nexport interface CancelContextMenuEvent {\n  eventType: 'cancel';\n  event?: MouseEvent | KeyboardEvent;\n}\nexport interface ExecuteContextMenuEvent {\n  eventType: 'execute';\n  event?: MouseEvent | KeyboardEvent;\n  item: any;\n  menuItem: ContextMenuItemDirective;\n}\nexport type CloseContextMenuEvent = ExecuteContextMenuEvent | CancelContextMenuEvent;\n\n@Injectable()\nexport class ContextMenuService {\n  public isDestroyingLeafMenu = false;\n\n  public show: Subject<IContextMenuClickEvent> = new Subject<IContextMenuClickEvent>();\n  public triggerClose: Subject<ContextMenuContentComponent> = new Subject();\n  public close: Subject<CloseContextMenuEvent> = new Subject();\n\n  private contextMenuContent: ComponentRef<ContextMenuContentComponent>;\n  private overlays: OverlayRef[] = [];\n  private fakeElement: any = {\n    getBoundingClientRect: (): ClientRect => ({\n      bottom: 0,\n      height: 0,\n      left: 0,\n      right: 0,\n      top: 0,\n      width: 0,\n    })\n  };\n\n  constructor(\n    private overlay: Overlay,\n    private scrollStrategy: ScrollStrategyOptions,\n  ) { }\n\n  public openContextMenu(context: IContextMenuContext) {\n    const { anchorElement, event, parentContextMenu } = context;\n\n    if (!parentContextMenu) {\n      const mouseEvent = event as MouseEvent;\n      this.fakeElement.getBoundingClientRect = (): ClientRect => ({\n        bottom: mouseEvent.clientY,\n        height: 0,\n        left: mouseEvent.clientX,\n        right: mouseEvent.clientX,\n        top: mouseEvent.clientY,\n        width: 0,\n      });\n      this.closeAllContextMenus({ eventType: 'cancel', event });\n      const positionStrategy = this.overlay.position().connectedTo(\n        new ElementRef(anchorElement || this.fakeElement),\n        { originX: 'start', originY: 'bottom' },\n        { overlayX: 'start', overlayY: 'top' })\n        .withFallbackPosition(\n        { originX: 'start', originY: 'top' },\n        { overlayX: 'start', overlayY: 'bottom' })\n        .withFallbackPosition(\n        { originX: 'end', originY: 'top' },\n        { overlayX: 'start', overlayY: 'top' })\n        .withFallbackPosition(\n        { originX: 'start', originY: 'top' },\n        { overlayX: 'end', overlayY: 'top' })\n        .withFallbackPosition(\n        { originX: 'end', originY: 'center' },\n        { overlayX: 'start', overlayY: 'center' })\n        .withFallbackPosition(\n        { originX: 'start', originY: 'center' },\n        { overlayX: 'end', overlayY: 'center' })\n        ;\n      this.overlays = [this.overlay.create({\n        positionStrategy,\n        panelClass: 'ngx-contextmenu',\n        scrollStrategy: this.scrollStrategy.close(),\n      })];\n      this.attachContextMenu(this.overlays[0], context);\n    } else {\n      const positionStrategy = this.overlay.position().connectedTo(\n        new ElementRef(event ? event.target : anchorElement),\n        { originX: 'end', originY: 'top' },\n        { overlayX: 'start', overlayY: 'top' })\n        .withFallbackPosition(\n        { originX: 'start', originY: 'top' },\n        { overlayX: 'end', overlayY: 'top' })\n        .withFallbackPosition(\n        { originX: 'end', originY: 'bottom' },\n        { overlayX: 'start', overlayY: 'bottom' })\n        .withFallbackPosition(\n        { originX: 'start', originY: 'bottom' },\n        { overlayX: 'end', overlayY: 'bottom' })\n        ;\n      const newOverlay = this.overlay.create({\n        positionStrategy,\n        panelClass: 'ngx-contextmenu',\n        scrollStrategy: this.scrollStrategy.close(),\n      });\n      this.destroySubMenus(parentContextMenu);\n      this.overlays = this.overlays.concat(newOverlay);\n      this.attachContextMenu(newOverlay, context);\n    }\n  }\n\n  public attachContextMenu(overlay: OverlayRef, context: IContextMenuContext): void {\n    const { event, item, menuItems, menuClass } = context;\n\n    const contextMenuContent: ComponentRef<ContextMenuContentComponent> = overlay.attach(new ComponentPortal(ContextMenuContentComponent));\n    contextMenuContent.instance.event = event;\n    contextMenuContent.instance.item = item;\n    contextMenuContent.instance.menuItems = menuItems;\n    contextMenuContent.instance.overlay = overlay;\n    contextMenuContent.instance.isLeaf = true;\n    contextMenuContent.instance.menuClass = menuClass;\n    (<OverlayRefWithContextMenu>overlay).contextMenu = contextMenuContent.instance;\n\n    const subscriptions: Subscription = new Subscription();\n    subscriptions.add(contextMenuContent.instance.execute.asObservable()\n      .subscribe((executeEvent) => this.closeAllContextMenus({ eventType: 'execute', ...executeEvent })));\n    subscriptions.add(contextMenuContent.instance.closeAllMenus.asObservable()\n      .subscribe((closeAllEvent) => this.closeAllContextMenus({ eventType: 'cancel', ...closeAllEvent })));\n    subscriptions.add(contextMenuContent.instance.closeLeafMenu.asObservable()\n      .subscribe(closeLeafMenuEvent => this.destroyLeafMenu(closeLeafMenuEvent)));\n    subscriptions.add(contextMenuContent.instance.openSubMenu.asObservable()\n      .subscribe((subMenuEvent: IContextMenuContext) => {\n        this.destroySubMenus(contextMenuContent.instance);\n        if (!subMenuEvent.contextMenu) {\n          contextMenuContent.instance.isLeaf = true;\n          return;\n        }\n        contextMenuContent.instance.isLeaf = false;\n        this.show.next(subMenuEvent);\n      }));\n    contextMenuContent.onDestroy(() => {\n      menuItems.forEach(menuItem => menuItem.isActive = false);\n      subscriptions.unsubscribe();\n    });\n    contextMenuContent.changeDetectorRef.detectChanges();\n  }\n\n  public closeAllContextMenus(closeEvent: CloseContextMenuEvent): void {\n    if (this.overlays) {\n      this.close.next(closeEvent);\n      this.overlays.forEach((overlay, index) => {\n        overlay.detach();\n        overlay.dispose();\n      });\n    }\n    this.overlays = [];\n  }\n\n  public getLastAttachedOverlay(): OverlayRefWithContextMenu {\n    let overlay: OverlayRef = this.overlays[this.overlays.length - 1];\n    while (this.overlays.length > 1 && overlay && !overlay.hasAttached()) {\n      overlay.detach();\n      overlay.dispose();\n      this.overlays = this.overlays.slice(0, -1);\n      overlay = this.overlays[this.overlays.length - 1];\n    }\n    return overlay;\n  }\n\n  public destroyLeafMenu({ exceptRootMenu, event }: CloseLeafMenuEvent = {}): void {\n    if (this.isDestroyingLeafMenu) {\n      return;\n    }\n    this.isDestroyingLeafMenu = true;\n\n    setTimeout(() => {\n      const overlay = this.getLastAttachedOverlay();\n      if (this.overlays.length > 1 && overlay) {\n        overlay.detach();\n        overlay.dispose();\n      }\n      if (!exceptRootMenu && this.overlays.length > 0 && overlay) {\n        this.close.next({ eventType: 'cancel', event });\n        overlay.detach();\n        overlay.dispose();\n      }\n\n      const newLeaf = this.getLastAttachedOverlay();\n      if (newLeaf) {\n        newLeaf.contextMenu.isLeaf = true;\n      }\n\n      this.isDestroyingLeafMenu = false;\n    });\n  }\n\n  public destroySubMenus(contextMenu: ContextMenuContentComponent): void {\n    const overlay = contextMenu.overlay;\n    const index = this.overlays.indexOf(overlay);\n    this.overlays.slice(index + 1).forEach(subMenuOverlay => {\n      subMenuOverlay.detach();\n      subMenuOverlay.dispose();\n    });\n  }\n\n  public isLeafMenu(contextMenuContent: ContextMenuContentComponent): boolean {\n    const overlay = this.getLastAttachedOverlay();\n    return contextMenuContent.overlay === overlay;\n  }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { ContextMenuItemDirective } from './contextMenu.item.directive';\nimport { IContextMenuOptions } from './contextMenu.options';\nimport { ContextMenuService, IContextMenuClickEvent, CloseContextMenuEvent } from './contextMenu.service';\nimport { CONTEXT_MENU_OPTIONS } from './contextMenu.tokens';\n\nexport interface ILinkConfig {\n  click: (item: any, $event?: MouseEvent) => void;\n  enabled?: (item: any) => boolean;\n  html: (item: any) => string;\n}\nexport interface MouseLocation {\n  left?: string;\n  marginLeft?: string;\n  marginTop?: string;\n  top?: string;\n}\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'context-menu',\n  styles: [`\n    .cdk-overlay-container {\n      position: fixed;\n      z-index: 1000;\n      pointer-events: none;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n    }\n    .ngx-contextmenu.cdk-overlay-pane {\n      position: absolute;\n      pointer-events: auto;\n      box-sizing: border-box;\n    }\n  `],\n  template: ` `,\n})\nexport class ContextMenuComponent implements OnDestroy {\n  @Input() public menuClass = \"\";\n  @Input() public autoFocus = false;\n  @Input() public useBootstrap4 = false;\n  @Input() public disabled = false;\n  @Output() public close: EventEmitter<CloseContextMenuEvent> = new EventEmitter();\n  @Output() public open: EventEmitter<IContextMenuClickEvent> = new EventEmitter();\n  @ContentChildren(ContextMenuItemDirective) public menuItems: QueryList<ContextMenuItemDirective>;\n  @ViewChild('menu', { static: false }) public menuElement: ElementRef;\n  public visibleMenuItems: ContextMenuItemDirective[] = [];\n\n  public links: ILinkConfig[] = [];\n  public item: any;\n  public event: MouseEvent | KeyboardEvent;\n  private subscription: Subscription = new Subscription();\n\n  constructor(\n    private _contextMenuService: ContextMenuService,\n    private changeDetector: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    @Optional()\n    @Inject(CONTEXT_MENU_OPTIONS) private options: IContextMenuOptions,\n  ) {\n    if (options) {\n      this.autoFocus = options.autoFocus;\n      this.useBootstrap4 = options.useBootstrap4;\n    }\n    this.subscription.add(_contextMenuService.show.subscribe(menuEvent => {\n      this.onMenuEvent(menuEvent);\n    }));\n  }\n\n  public ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  public onMenuEvent(menuEvent: IContextMenuClickEvent): void {\n    if (this.disabled) {\n      return;\n    }\n    const { contextMenu, event, item } = menuEvent;\n    if (contextMenu && contextMenu !== this) {\n      return;\n    }\n    this.event = event;\n    this.item = item;\n    this.setVisibleMenuItems();\n    this._contextMenuService.openContextMenu({ ...menuEvent, menuItems: this.visibleMenuItems, menuClass: this.menuClass });\n    this._contextMenuService.close.asObservable().pipe(first()).subscribe(closeEvent => this.close.emit(closeEvent));\n    this.open.next(menuEvent);\n  }\n\n  public isMenuItemVisible(menuItem: ContextMenuItemDirective): boolean {\n    return this.evaluateIfFunction(menuItem.visible);\n  }\n\n  public setVisibleMenuItems(): void {\n    this.visibleMenuItems = this.menuItems.filter(menuItem => this.isMenuItemVisible(menuItem));\n  }\n\n  public evaluateIfFunction(value: any): any {\n    if (value instanceof Function) {\n      return value(this.item);\n    }\n    return value;\n  }\n}\n","import { ContextMenuComponent } from './contextMenu.component';\nimport { ContextMenuService } from './contextMenu.service';\nimport { Directive, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[contextMenu]',\n})\nexport class ContextMenuAttachDirective {\n  @Input() public contextMenuSubject: any;\n  @Input() public contextMenu: ContextMenuComponent;\n\n  constructor(private contextMenuService: ContextMenuService) { }\n\n  @HostListener('contextmenu', ['$event'])\n  public onContextMenu(event: MouseEvent): void {\n    if (!this.contextMenu.disabled) {\n      this.contextMenuService.show.next({\n        contextMenu: this.contextMenu,\n        event,\n        item: this.contextMenuSubject,\n      });\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n}\n","import { OverlayModule, FullscreenOverlayContainer, OverlayContainer, } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { ContextMenuAttachDirective } from './contextMenu.attach.directive';\nimport { ContextMenuComponent } from './contextMenu.component';\nimport { ContextMenuItemDirective } from './contextMenu.item.directive';\nimport { IContextMenuOptions } from './contextMenu.options';\nimport { ContextMenuService } from './contextMenu.service';\nimport { CONTEXT_MENU_OPTIONS } from './contextMenu.tokens';\nimport { ContextMenuContentComponent } from './contextMenuContent.component';\n\n@NgModule({\n  declarations: [\n    ContextMenuAttachDirective,\n    ContextMenuComponent,\n    ContextMenuContentComponent,\n    ContextMenuItemDirective,\n  ],\n  entryComponents: [\n    ContextMenuContentComponent,\n  ],\n  exports: [\n    ContextMenuAttachDirective,\n    ContextMenuComponent,\n    ContextMenuItemDirective,\n  ],\n  imports: [\n    CommonModule,\n    OverlayModule,\n  ],\n})\nexport class ContextMenuModule {\n  public static forRoot(options?: IContextMenuOptions): ModuleWithProviders<ContextMenuModule> {\n    return {\n      ngModule: ContextMenuModule,\n      providers: [\n        ContextMenuService,\n        {\n          provide: CONTEXT_MENU_OPTIONS,\n          useValue: options,\n        },\n        { provide: OverlayContainer, useClass: FullscreenOverlayContainer },\n      ],\n    };\n  }\n}\n"]}